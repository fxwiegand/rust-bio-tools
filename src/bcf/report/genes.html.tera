<!DOCTYPE html>
<html>
    <head>
        <meta charset="UTF-8">
        <link rel="stylesheet" type="text/css" href="../css/bootstrap.min.css">
        <style>
            body {
                text-align: center;
            }
            #oncoprint {
                margin-top: 15px;
                text-align: center;
            }
        </style>
        <title>{{ gene|safe }}</title>
    </head>
    <body>
    <nav class="navbar navbar-expand-lg navbar-dark bg-dark">
        <a class="navbar-brand" href="#">rbt report</a>
        <div class="collapse navbar-collapse" id="navbarText">
            <ul class="navbar-nav mr-auto">
                <li class="nav-item">
                    <a class="nav-link" href="https://github.com/rust-bio/rust-bio-tools/blob/master/CHANGELOG.md">{{ version }}</a>
                </li>
                <li class="nav-item">
                    <a class="nav-link" href="https://github.com/rust-bio/rust-bio-tools">github</a>
                </li>
            </ul>
            <span class="navbar-text">
                    created {{ time }}
                </span>
        </div>
    </nav>
        <nav aria-label="breadcrumb">
            <ol class="breadcrumb">
                <li class="breadcrumb-item"><a href="../index1.html">Oncoprint</a></li>
                <li class="breadcrumb-item active" aria-current="page">gene: {{ gene|safe }}</li>
            </ol>
        </nav>
        <div id="oncoprint"></div>

        <script src="../js/jquery.min.js"></script>
        <script src="../js/jsonm.min.js"></script>
        <script src="../js/vega.min.js"></script>
        <script src="../js/vega-lite.min.js"></script>
        <script src="../js/vega-embed.min.js"></script>

        <script>
            var order = {{ order | safe }};
            var spec = {{ genespecs | safe }};
            const unpacker = new jsonm.Unpacker();
            spec = unpacker.unpack(spec);
            let changed_records = []
            let delete_records = []
            spec.datasets.main.forEach(function(record, j) {
                let variants = record.variants.split("/");
                if (variants.length > 1) {
                    for (var i = 0; i < variants.length; i++) {
                        let field = "variants" + (i+1);
                        let layer_record = JSON.parse(JSON.stringify(record));
                        layer_record[field] = variants[i];
                        layer_record.count_variants = variants[i];
                        changed_records.push(layer_record);
                    }
                    delete_records.push(j);
                } else {
                    record.variants1 = record.variants;
                    record.count_variants = record.variants;
                }
            });
            for (let i = 0; i < delete_records.length; i++) {
                spec.datasets.main.splice(delete_records[i]-i, 1);
            }
            changed_records.forEach(function(record) {
                spec.datasets.main.push(record);
            });
            let page_width =  $(window).width();
            let samples = {{ samples | safe }};
            let matrix_width = Math.min(page_width - 740, samples*20);
            if (matrix_width < 20 && samples > 2) {
                matrix_width = 40;
            }
            // add sort attribute to data
            spec.vconcat[1].hconcat.forEach(function(ele) {
                if (ele.layer === undefined) {
                    ele.encoding.y.sort = order;
                } else {
                    ele.layer.forEach(function(layer) {
                        layer.encoding.y.sort = order;
                        layer.width = matrix_width;
                    })
                }
            })
            spec.vconcat[0].width = matrix_width;
            vegaEmbed('#oncoprint', spec).then(function(result) {
                result.view.addEventListener('click', function(event, item) {
                    if (item.datum.gene !== undefined && item.datum.sample !== undefined) {
                        window.location.href = '../details/' + item.datum.sample + '/' + item.datum.gene + '.html';
                    }
                });
            });

            window.addEventListener('resize', function(event){
                let page_width =  $(window).width();
                let matrix_width = Math.min(page_width - 740, samples*20);
                if (matrix_width < 20 && samples > 2) {
                    matrix_width = 40;
                }
                spec.vconcat[0].width = matrix_width;
                spec.vconcat[1].hconcat.forEach(function(ele) {
                    if (ele.layer !== undefined) {
                        ele.layer.forEach(function(layer) {
                            layer.width = matrix_width;
                        })
                    }
                });

                vegaEmbed('#oncoprint', spec).then(function(result) {
                    result.view.addEventListener('click', function(event, item) {
                        if (item.datum.gene !== undefined && item.datum.sample !== undefined) {
                            window.location.href = '../details/' + item.datum.sample + '/' + item.datum.gene + '.html';
                        }
                    });
                });
            });
        </script>
    </body>
</html>