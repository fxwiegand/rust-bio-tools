<!doctype html>
<html lang="en">
<head>
    <title>Report</title>

    <link rel="stylesheet" href="https://stackpath.bootstrapcdn.com/bootstrap/4.3.1/css/bootstrap.min.css" integrity="sha384-ggOyR0iXCbMQv3Xipma34MD+dH/1fQ784/j6cY/iJTQUOhcWr7x9JvoRxT2MZw1T" crossorigin="anonymous">
    <script src="https://code.jquery.com/jquery-3.3.1.slim.min.js" integrity="sha384-q8i/X+965DzO0rT7abK41JStQIAqVgRVzpbzo5smXKp4YfRvH+8abtTE1Pi6jizo" crossorigin="anonymous"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/popper.js/1.14.7/umd/popper.min.js" integrity="sha384-UO2eT0CpHqdSJQ6hJty5KVphtPhzWj9WO1clHTMGa3JDZwrnQq4sF86dIHNDz0W1" crossorigin="anonymous"></script>
    <script src="https://stackpath.bootstrapcdn.com/bootstrap/4.3.1/js/bootstrap.min.js" integrity="sha384-JjSmVgyd0p3pXB1rRibZUAYoIIy6OrQ6VrjIEaFf/nJGzIxFDsf4x0xIM+B07jRM" crossorigin="anonymous"></script>
    <script src="https://cdn.jsdelivr.net/npm/vega@5"></script>
    <script src="https://cdn.jsdelivr.net/npm/vega-embed@6"></script>
    <script src="https://cdn.jsdelivr.net/npm/jsonm@1.0.10/build/jsonm.min.js"></script>
    <script src="https://unpkg.com/bootstrap-table@1.16.0/dist/bootstrap-table.min.js"></script>
    <link href="https://unpkg.com/bootstrap-table@1.16.0/dist/bootstrap-table.min.css" rel="stylesheet">
</head>
<body>
    <div class="container-fluid ">
        <div class="row">
            <div class="col-8">

                <table id="table" class="table table-hover table-light table-bordered" data-toggle="table" data-height="510" data-search="true" data-pagination="true">
                    <thead>
                    <tr>
                        <th scope="col">name</th>
                        <th scope="col" data-sortable="true">id</th>
                        <th scope="col" data-sortable="true">position</th>
                        <th scope="col">reference</th>
                        <th scope="col">alternative</th>
                    </tr>
                    </thead>
                    <tbody>
                    {% for variant in variants %}
                    <tr
                            class="variant-row"
                            id="{{ variant.id }}"
                            data-name="{{ variant.name }}"
                            data-id="{{ variant.id }}"
                            data-position="{{ variant.position }}"
                            data-type="{{ variant.var_type }}"
                            data-reference="{{ variant.reference }}"
                            data-alternatives="{{ variant.alternatives | safe }}"
                            data-vis="{{ variant.vis | escape }}"
                            {% for attr in variant.ann %}
                                {% set rowloop = loop.index %}
                                {% for a in attr %}
                                    data-{{ "ann" ~ "[" ~ rowloop ~ "][" ~ loop.index ~ "]" }}="{{ a }}"
                                {% endfor %}
                            {% endfor %}
                    >
                        <th scope="row">{{ variant.name }}</th>
                        <td>{{ variant.id }}</td>
                        <td>{{ variant.position }}</td>
                        <td>{{ variant.reference }}</td>
                        <td>{{ variant.alternatives}}</td>
                    </tr>
                    {% endfor %}
                    </tbody>
                </table>
            </div>
            <div class="col-4">
                <table id="sidebar" class="table table-hover table-light table-bordered" style="margin-top: 58px;">
                </table>
            </div>

            <script>
                // customize column_values to display the attributes of your choice to the sidebar
                let column_values = ['id', 'position', 'reference', 'alternatives', 'type', 'ann[1][3]', 'ann[1][5]', 'ann[1][6]','ann[1][7]'];

                $(document).ready(function () {
                    $("html").on('click', '.variant-row', function () {
                        let compressed_specs = $(this).data('vis');
                        const unpacker = new jsonm.Unpacker();
                        let specs = unpacker.unpack(compressed_specs);
                        specs.data[1].values.forEach(function(a) {
                            if (a.row > 0 && Array.isArray(a.flags)) {
                                let flags = {};
                                a.flags.forEach(function(b) {
                                    if (b === 1) {
                                        flags[b] = "template having multiple segments in sequencing";
                                    } else if (b === 2) {
                                        flags[b] = "each segment properly aligned according to the aligner";
                                    } else if (b === 4) {
                                        flags[b] = "segment unmapped";
                                    } else if (b === 8) {
                                        a.flags[b] = "next segment in the template unmapped";
                                    } else if (b === 16) {
                                        flags[b] = "SEQ being reverse complemented";
                                    } else if (b === 32) {
                                        flags[b] = "SEQ of the next segment in the template being reverse complemented";
                                    } else if (b === 64) {
                                        flags[b] = "the first segment in the template";
                                    } else if (b === 128) {
                                        flags[b] = "the last segment in the template";
                                    } else if (b === 256) {
                                        flags[b] = "secondary alignment";
                                    } else if (b === 512) {
                                        flags[b] = "not passing filters, such as platform/vendor quality controls";
                                    } else if (b === 1024) {
                                        flags[b] = "PCR or optical duplicate";
                                    } else if (b === 2048) {
                                        flags[b] = "vega lite lines";
                                    }
                                });
                                a.flags = flags;
                            }
                        });
                        console.log(specs.data[1].values);
                        specs.width = $('#vis').width() - 40;
                        let v = vegaEmbed('#vis', specs);
                        $("#sidebar").empty();
                        $.each($(this).data(), function(i, v) {
                            if (i !== 'index' && column_values.includes(i)) {
                                $('#sidebar').append('<tr><th class="thead-dark">' + i + '</th><td>' + v + '</td></tr>');
                            }
                        });
                    })
                })
            </script>
        </div>
        <div class="row">
            <div class="col-8">
                <div id="vis" class="justify-content-center" style="width: 100%"></div>
            </div>

        </div>
    </div>
</body>
</html>